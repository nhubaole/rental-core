// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package gen

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// LeaseContractManagementLeaseContract is an auto generated low-level Go binding around an user-defined struct.
type LeaseContractManagementLeaseContract struct {
	ContractId            *big.Int
	ContractCode          string
	Landlord              common.Address
	Tenant                common.Address
	RoomId                *big.Int
	ActualPrice           *big.Int
	DepositAmount         *big.Int
	BeginDate             *big.Int
	EndDate               *big.Int
	PaymentMethod         string
	ElectricityMethod     string
	ElectricityCost       *big.Int
	WaterMethod           string
	WaterCost             *big.Int
	InternetCost          *big.Int
	ParkingFee            *big.Int
	ResponsibilityA       string
	ResponsibilityB       string
	GeneralResponsibility string
	SignatureA            string
	SignedTimeA           *big.Int
	SignatureB            string
	SignedTimeB           *big.Int
	CreatedAt             *big.Int
	UpdatedAt             *big.Int
	DeletedAt             *big.Int
	ContractTemplateId    *big.Int
	PreRentalStatus       uint8
	RentalProcessStatus   uint8
	PostRentalStatus      uint8
	Status                *big.Int
	Exists                bool
}

// LeaseContractManagementMetaData contains all meta data concerning the LeaseContractManagement contract.
var LeaseContractManagementMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"billingCode\",\"type\":\"string\"}],\"name\":\"BillingRecordCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractCode\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"}],\"name\":\"LeaseContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"returnCode\",\"type\":\"string\"}],\"name\":\"ReturnRequestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"approveReturnRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_billingCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"createBill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_code\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_roomId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_beginDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_paymentMethod\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_electricityMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_electricityCost\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_waterMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_waterCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_internetCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_parkingFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_responsibilityA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_responsibilityB\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_generalResponsibility\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_signatureA\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_signedTimeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractTemplateId\",\"type\":\"uint256\"}],\"name\":\"createLeaseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_returnCode\",\"type\":\"string\"}],\"name\":\"createReturnRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"getContractById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contractCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beginDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"paymentMethod\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"electricityMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"electricityCost\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"waterMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"waterCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"internetCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parkingFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"responsibilityA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responsibilityB\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"generalResponsibility\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signatureA\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeA\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signatureB\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deletedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"enumLeaseContractManagement.PreRentalStatus\",\"name\":\"preRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.RentalProcessStatus\",\"name\":\"rentalProcessStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.PostRentalStatus\",\"name\":\"postRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"structLeaseContractManagement.LeaseContract\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"inputMeterReading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leaseContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contractCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beginDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"paymentMethod\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"electricityMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"electricityCost\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"waterMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"waterCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"internetCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parkingFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"responsibilityA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responsibilityB\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"generalResponsibility\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signatureA\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeA\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signatureB\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deletedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"enumLeaseContractManagement.PreRentalStatus\",\"name\":\"preRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.RentalProcessStatus\",\"name\":\"rentalProcessStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.PostRentalStatus\",\"name\":\"postRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"listContractsByStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contractCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beginDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"paymentMethod\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"electricityMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"electricityCost\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"waterMethod\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"waterCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"internetCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parkingFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"responsibilityA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responsibilityB\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"generalResponsibility\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signatureA\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeA\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signatureB\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"signedTimeB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deletedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"enumLeaseContractManagement.PreRentalStatus\",\"name\":\"preRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.RentalProcessStatus\",\"name\":\"rentalProcessStatus\",\"type\":\"uint8\"},{\"internalType\":\"enumLeaseContractManagement.PostRentalStatus\",\"name\":\"postRentalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"structLeaseContractManagement.LeaseContract[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextContractId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"payBill\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"payDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_signatureB\",\"type\":\"string\"}],\"name\":\"signContractByTenant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// LeaseContractManagementABI is the input ABI used to generate the binding from.
// Deprecated: Use LeaseContractManagementMetaData.ABI instead.
var LeaseContractManagementABI = LeaseContractManagementMetaData.ABI

// LeaseContractManagementBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use LeaseContractManagementMetaData.Bin instead.
var LeaseContractManagementBin = LeaseContractManagementMetaData.Bin

// DeployLeaseContractManagement deploys a new Ethereum contract, binding an instance of LeaseContractManagement to it.
func DeployLeaseContractManagement(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *LeaseContractManagement, error) {
	parsed, err := LeaseContractManagementMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(LeaseContractManagementBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &LeaseContractManagement{LeaseContractManagementCaller: LeaseContractManagementCaller{contract: contract}, LeaseContractManagementTransactor: LeaseContractManagementTransactor{contract: contract}, LeaseContractManagementFilterer: LeaseContractManagementFilterer{contract: contract}}, nil
}

// LeaseContractManagement is an auto generated Go binding around an Ethereum contract.
type LeaseContractManagement struct {
	LeaseContractManagementCaller     // Read-only binding to the contract
	LeaseContractManagementTransactor // Write-only binding to the contract
	LeaseContractManagementFilterer   // Log filterer for contract events
}

// LeaseContractManagementCaller is an auto generated read-only Go binding around an Ethereum contract.
type LeaseContractManagementCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LeaseContractManagementTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LeaseContractManagementTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LeaseContractManagementFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LeaseContractManagementFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LeaseContractManagementSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LeaseContractManagementSession struct {
	Contract     *LeaseContractManagement // Generic contract binding to set the session for
	CallOpts     bind.CallOpts            // Call options to use throughout this session
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// LeaseContractManagementCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LeaseContractManagementCallerSession struct {
	Contract *LeaseContractManagementCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                  // Call options to use throughout this session
}

// LeaseContractManagementTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LeaseContractManagementTransactorSession struct {
	Contract     *LeaseContractManagementTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                  // Transaction auth options to use throughout this session
}

// LeaseContractManagementRaw is an auto generated low-level Go binding around an Ethereum contract.
type LeaseContractManagementRaw struct {
	Contract *LeaseContractManagement // Generic contract binding to access the raw methods on
}

// LeaseContractManagementCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LeaseContractManagementCallerRaw struct {
	Contract *LeaseContractManagementCaller // Generic read-only contract binding to access the raw methods on
}

// LeaseContractManagementTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LeaseContractManagementTransactorRaw struct {
	Contract *LeaseContractManagementTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLeaseContractManagement creates a new instance of LeaseContractManagement, bound to a specific deployed contract.
func NewLeaseContractManagement(address common.Address, backend bind.ContractBackend) (*LeaseContractManagement, error) {
	contract, err := bindLeaseContractManagement(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagement{LeaseContractManagementCaller: LeaseContractManagementCaller{contract: contract}, LeaseContractManagementTransactor: LeaseContractManagementTransactor{contract: contract}, LeaseContractManagementFilterer: LeaseContractManagementFilterer{contract: contract}}, nil
}

// NewLeaseContractManagementCaller creates a new read-only instance of LeaseContractManagement, bound to a specific deployed contract.
func NewLeaseContractManagementCaller(address common.Address, caller bind.ContractCaller) (*LeaseContractManagementCaller, error) {
	contract, err := bindLeaseContractManagement(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementCaller{contract: contract}, nil
}

// NewLeaseContractManagementTransactor creates a new write-only instance of LeaseContractManagement, bound to a specific deployed contract.
func NewLeaseContractManagementTransactor(address common.Address, transactor bind.ContractTransactor) (*LeaseContractManagementTransactor, error) {
	contract, err := bindLeaseContractManagement(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementTransactor{contract: contract}, nil
}

// NewLeaseContractManagementFilterer creates a new log filterer instance of LeaseContractManagement, bound to a specific deployed contract.
func NewLeaseContractManagementFilterer(address common.Address, filterer bind.ContractFilterer) (*LeaseContractManagementFilterer, error) {
	contract, err := bindLeaseContractManagement(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementFilterer{contract: contract}, nil
}

// bindLeaseContractManagement binds a generic wrapper to an already deployed contract.
func bindLeaseContractManagement(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := LeaseContractManagementMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LeaseContractManagement *LeaseContractManagementRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _LeaseContractManagement.Contract.LeaseContractManagementCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LeaseContractManagement *LeaseContractManagementRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.LeaseContractManagementTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LeaseContractManagement *LeaseContractManagementRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.LeaseContractManagementTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LeaseContractManagement *LeaseContractManagementCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _LeaseContractManagement.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LeaseContractManagement *LeaseContractManagementTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LeaseContractManagement *LeaseContractManagementTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.contract.Transact(opts, method, params...)
}

// GetContractById is a free data retrieval call binding the contract method 0x8ba9ac6f.
//
// Solidity: function getContractById(uint256 _contractId) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool))
func (_LeaseContractManagement *LeaseContractManagementCaller) GetContractById(opts *bind.CallOpts, _contractId *big.Int) (LeaseContractManagementLeaseContract, error) {
	var out []interface{}
	err := _LeaseContractManagement.contract.Call(opts, &out, "getContractById", _contractId)

	if err != nil {
		return *new(LeaseContractManagementLeaseContract), err
	}

	out0 := *abi.ConvertType(out[0], new(LeaseContractManagementLeaseContract)).(*LeaseContractManagementLeaseContract)

	return out0, err

}

// GetContractById is a free data retrieval call binding the contract method 0x8ba9ac6f.
//
// Solidity: function getContractById(uint256 _contractId) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool))
func (_LeaseContractManagement *LeaseContractManagementSession) GetContractById(_contractId *big.Int) (LeaseContractManagementLeaseContract, error) {
	return _LeaseContractManagement.Contract.GetContractById(&_LeaseContractManagement.CallOpts, _contractId)
}

// GetContractById is a free data retrieval call binding the contract method 0x8ba9ac6f.
//
// Solidity: function getContractById(uint256 _contractId) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool))
func (_LeaseContractManagement *LeaseContractManagementCallerSession) GetContractById(_contractId *big.Int) (LeaseContractManagementLeaseContract, error) {
	return _LeaseContractManagement.Contract.GetContractById(&_LeaseContractManagement.CallOpts, _contractId)
}

// LeaseContracts is a free data retrieval call binding the contract method 0xb43b2c7f.
//
// Solidity: function leaseContracts(uint256 ) view returns(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId, uint256 actualPrice, uint256 depositAmount, uint256 beginDate, uint256 endDate, string paymentMethod, string electricityMethod, uint256 electricityCost, string waterMethod, uint256 waterCost, uint256 internetCost, uint256 parkingFee, string responsibilityA, string responsibilityB, string generalResponsibility, string signatureA, uint256 signedTimeA, string signatureB, uint256 signedTimeB, uint256 createdAt, uint256 updatedAt, uint256 deletedAt, uint256 contractTemplateId, uint8 preRentalStatus, uint8 rentalProcessStatus, uint8 postRentalStatus, uint256 status, bool exists)
func (_LeaseContractManagement *LeaseContractManagementCaller) LeaseContracts(opts *bind.CallOpts, arg0 *big.Int) (struct {
	ContractId            *big.Int
	ContractCode          string
	Landlord              common.Address
	Tenant                common.Address
	RoomId                *big.Int
	ActualPrice           *big.Int
	DepositAmount         *big.Int
	BeginDate             *big.Int
	EndDate               *big.Int
	PaymentMethod         string
	ElectricityMethod     string
	ElectricityCost       *big.Int
	WaterMethod           string
	WaterCost             *big.Int
	InternetCost          *big.Int
	ParkingFee            *big.Int
	ResponsibilityA       string
	ResponsibilityB       string
	GeneralResponsibility string
	SignatureA            string
	SignedTimeA           *big.Int
	SignatureB            string
	SignedTimeB           *big.Int
	CreatedAt             *big.Int
	UpdatedAt             *big.Int
	DeletedAt             *big.Int
	ContractTemplateId    *big.Int
	PreRentalStatus       uint8
	RentalProcessStatus   uint8
	PostRentalStatus      uint8
	Status                *big.Int
	Exists                bool
}, error) {
	var out []interface{}
	err := _LeaseContractManagement.contract.Call(opts, &out, "leaseContracts", arg0)

	outstruct := new(struct {
		ContractId            *big.Int
		ContractCode          string
		Landlord              common.Address
		Tenant                common.Address
		RoomId                *big.Int
		ActualPrice           *big.Int
		DepositAmount         *big.Int
		BeginDate             *big.Int
		EndDate               *big.Int
		PaymentMethod         string
		ElectricityMethod     string
		ElectricityCost       *big.Int
		WaterMethod           string
		WaterCost             *big.Int
		InternetCost          *big.Int
		ParkingFee            *big.Int
		ResponsibilityA       string
		ResponsibilityB       string
		GeneralResponsibility string
		SignatureA            string
		SignedTimeA           *big.Int
		SignatureB            string
		SignedTimeB           *big.Int
		CreatedAt             *big.Int
		UpdatedAt             *big.Int
		DeletedAt             *big.Int
		ContractTemplateId    *big.Int
		PreRentalStatus       uint8
		RentalProcessStatus   uint8
		PostRentalStatus      uint8
		Status                *big.Int
		Exists                bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ContractId = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.ContractCode = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Landlord = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	outstruct.Tenant = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.RoomId = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.ActualPrice = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.DepositAmount = *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	outstruct.BeginDate = *abi.ConvertType(out[7], new(*big.Int)).(**big.Int)
	outstruct.EndDate = *abi.ConvertType(out[8], new(*big.Int)).(**big.Int)
	outstruct.PaymentMethod = *abi.ConvertType(out[9], new(string)).(*string)
	outstruct.ElectricityMethod = *abi.ConvertType(out[10], new(string)).(*string)
	outstruct.ElectricityCost = *abi.ConvertType(out[11], new(*big.Int)).(**big.Int)
	outstruct.WaterMethod = *abi.ConvertType(out[12], new(string)).(*string)
	outstruct.WaterCost = *abi.ConvertType(out[13], new(*big.Int)).(**big.Int)
	outstruct.InternetCost = *abi.ConvertType(out[14], new(*big.Int)).(**big.Int)
	outstruct.ParkingFee = *abi.ConvertType(out[15], new(*big.Int)).(**big.Int)
	outstruct.ResponsibilityA = *abi.ConvertType(out[16], new(string)).(*string)
	outstruct.ResponsibilityB = *abi.ConvertType(out[17], new(string)).(*string)
	outstruct.GeneralResponsibility = *abi.ConvertType(out[18], new(string)).(*string)
	outstruct.SignatureA = *abi.ConvertType(out[19], new(string)).(*string)
	outstruct.SignedTimeA = *abi.ConvertType(out[20], new(*big.Int)).(**big.Int)
	outstruct.SignatureB = *abi.ConvertType(out[21], new(string)).(*string)
	outstruct.SignedTimeB = *abi.ConvertType(out[22], new(*big.Int)).(**big.Int)
	outstruct.CreatedAt = *abi.ConvertType(out[23], new(*big.Int)).(**big.Int)
	outstruct.UpdatedAt = *abi.ConvertType(out[24], new(*big.Int)).(**big.Int)
	outstruct.DeletedAt = *abi.ConvertType(out[25], new(*big.Int)).(**big.Int)
	outstruct.ContractTemplateId = *abi.ConvertType(out[26], new(*big.Int)).(**big.Int)
	outstruct.PreRentalStatus = *abi.ConvertType(out[27], new(uint8)).(*uint8)
	outstruct.RentalProcessStatus = *abi.ConvertType(out[28], new(uint8)).(*uint8)
	outstruct.PostRentalStatus = *abi.ConvertType(out[29], new(uint8)).(*uint8)
	outstruct.Status = *abi.ConvertType(out[30], new(*big.Int)).(**big.Int)
	outstruct.Exists = *abi.ConvertType(out[31], new(bool)).(*bool)

	return *outstruct, err

}

// LeaseContracts is a free data retrieval call binding the contract method 0xb43b2c7f.
//
// Solidity: function leaseContracts(uint256 ) view returns(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId, uint256 actualPrice, uint256 depositAmount, uint256 beginDate, uint256 endDate, string paymentMethod, string electricityMethod, uint256 electricityCost, string waterMethod, uint256 waterCost, uint256 internetCost, uint256 parkingFee, string responsibilityA, string responsibilityB, string generalResponsibility, string signatureA, uint256 signedTimeA, string signatureB, uint256 signedTimeB, uint256 createdAt, uint256 updatedAt, uint256 deletedAt, uint256 contractTemplateId, uint8 preRentalStatus, uint8 rentalProcessStatus, uint8 postRentalStatus, uint256 status, bool exists)
func (_LeaseContractManagement *LeaseContractManagementSession) LeaseContracts(arg0 *big.Int) (struct {
	ContractId            *big.Int
	ContractCode          string
	Landlord              common.Address
	Tenant                common.Address
	RoomId                *big.Int
	ActualPrice           *big.Int
	DepositAmount         *big.Int
	BeginDate             *big.Int
	EndDate               *big.Int
	PaymentMethod         string
	ElectricityMethod     string
	ElectricityCost       *big.Int
	WaterMethod           string
	WaterCost             *big.Int
	InternetCost          *big.Int
	ParkingFee            *big.Int
	ResponsibilityA       string
	ResponsibilityB       string
	GeneralResponsibility string
	SignatureA            string
	SignedTimeA           *big.Int
	SignatureB            string
	SignedTimeB           *big.Int
	CreatedAt             *big.Int
	UpdatedAt             *big.Int
	DeletedAt             *big.Int
	ContractTemplateId    *big.Int
	PreRentalStatus       uint8
	RentalProcessStatus   uint8
	PostRentalStatus      uint8
	Status                *big.Int
	Exists                bool
}, error) {
	return _LeaseContractManagement.Contract.LeaseContracts(&_LeaseContractManagement.CallOpts, arg0)
}

// LeaseContracts is a free data retrieval call binding the contract method 0xb43b2c7f.
//
// Solidity: function leaseContracts(uint256 ) view returns(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId, uint256 actualPrice, uint256 depositAmount, uint256 beginDate, uint256 endDate, string paymentMethod, string electricityMethod, uint256 electricityCost, string waterMethod, uint256 waterCost, uint256 internetCost, uint256 parkingFee, string responsibilityA, string responsibilityB, string generalResponsibility, string signatureA, uint256 signedTimeA, string signatureB, uint256 signedTimeB, uint256 createdAt, uint256 updatedAt, uint256 deletedAt, uint256 contractTemplateId, uint8 preRentalStatus, uint8 rentalProcessStatus, uint8 postRentalStatus, uint256 status, bool exists)
func (_LeaseContractManagement *LeaseContractManagementCallerSession) LeaseContracts(arg0 *big.Int) (struct {
	ContractId            *big.Int
	ContractCode          string
	Landlord              common.Address
	Tenant                common.Address
	RoomId                *big.Int
	ActualPrice           *big.Int
	DepositAmount         *big.Int
	BeginDate             *big.Int
	EndDate               *big.Int
	PaymentMethod         string
	ElectricityMethod     string
	ElectricityCost       *big.Int
	WaterMethod           string
	WaterCost             *big.Int
	InternetCost          *big.Int
	ParkingFee            *big.Int
	ResponsibilityA       string
	ResponsibilityB       string
	GeneralResponsibility string
	SignatureA            string
	SignedTimeA           *big.Int
	SignatureB            string
	SignedTimeB           *big.Int
	CreatedAt             *big.Int
	UpdatedAt             *big.Int
	DeletedAt             *big.Int
	ContractTemplateId    *big.Int
	PreRentalStatus       uint8
	RentalProcessStatus   uint8
	PostRentalStatus      uint8
	Status                *big.Int
	Exists                bool
}, error) {
	return _LeaseContractManagement.Contract.LeaseContracts(&_LeaseContractManagement.CallOpts, arg0)
}

// ListContractsByStatus is a free data retrieval call binding the contract method 0x0d866b22.
//
// Solidity: function listContractsByStatus(uint256 _status) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool)[])
func (_LeaseContractManagement *LeaseContractManagementCaller) ListContractsByStatus(opts *bind.CallOpts, _status *big.Int) ([]LeaseContractManagementLeaseContract, error) {
	var out []interface{}
	err := _LeaseContractManagement.contract.Call(opts, &out, "listContractsByStatus", _status)

	if err != nil {
		return *new([]LeaseContractManagementLeaseContract), err
	}

	out0 := *abi.ConvertType(out[0], new([]LeaseContractManagementLeaseContract)).(*[]LeaseContractManagementLeaseContract)

	return out0, err

}

// ListContractsByStatus is a free data retrieval call binding the contract method 0x0d866b22.
//
// Solidity: function listContractsByStatus(uint256 _status) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool)[])
func (_LeaseContractManagement *LeaseContractManagementSession) ListContractsByStatus(_status *big.Int) ([]LeaseContractManagementLeaseContract, error) {
	return _LeaseContractManagement.Contract.ListContractsByStatus(&_LeaseContractManagement.CallOpts, _status)
}

// ListContractsByStatus is a free data retrieval call binding the contract method 0x0d866b22.
//
// Solidity: function listContractsByStatus(uint256 _status) view returns((uint256,string,address,address,uint256,uint256,uint256,uint256,uint256,string,string,uint256,string,uint256,uint256,uint256,string,string,string,string,uint256,string,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint256,bool)[])
func (_LeaseContractManagement *LeaseContractManagementCallerSession) ListContractsByStatus(_status *big.Int) ([]LeaseContractManagementLeaseContract, error) {
	return _LeaseContractManagement.Contract.ListContractsByStatus(&_LeaseContractManagement.CallOpts, _status)
}

// NextContractId is a free data retrieval call binding the contract method 0x9b4bc530.
//
// Solidity: function nextContractId() view returns(uint256)
func (_LeaseContractManagement *LeaseContractManagementCaller) NextContractId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _LeaseContractManagement.contract.Call(opts, &out, "nextContractId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NextContractId is a free data retrieval call binding the contract method 0x9b4bc530.
//
// Solidity: function nextContractId() view returns(uint256)
func (_LeaseContractManagement *LeaseContractManagementSession) NextContractId() (*big.Int, error) {
	return _LeaseContractManagement.Contract.NextContractId(&_LeaseContractManagement.CallOpts)
}

// NextContractId is a free data retrieval call binding the contract method 0x9b4bc530.
//
// Solidity: function nextContractId() view returns(uint256)
func (_LeaseContractManagement *LeaseContractManagementCallerSession) NextContractId() (*big.Int, error) {
	return _LeaseContractManagement.Contract.NextContractId(&_LeaseContractManagement.CallOpts)
}

// ApproveReturnRequest is a paid mutator transaction binding the contract method 0x7874336f.
//
// Solidity: function approveReturnRequest(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) ApproveReturnRequest(opts *bind.TransactOpts, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "approveReturnRequest", _contractId)
}

// ApproveReturnRequest is a paid mutator transaction binding the contract method 0x7874336f.
//
// Solidity: function approveReturnRequest(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) ApproveReturnRequest(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.ApproveReturnRequest(&_LeaseContractManagement.TransactOpts, _contractId)
}

// ApproveReturnRequest is a paid mutator transaction binding the contract method 0x7874336f.
//
// Solidity: function approveReturnRequest(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) ApproveReturnRequest(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.ApproveReturnRequest(&_LeaseContractManagement.TransactOpts, _contractId)
}

// CreateBill is a paid mutator transaction binding the contract method 0x452c5797.
//
// Solidity: function createBill(string _billingCode, uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) CreateBill(opts *bind.TransactOpts, _billingCode string, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "createBill", _billingCode, _contractId)
}

// CreateBill is a paid mutator transaction binding the contract method 0x452c5797.
//
// Solidity: function createBill(string _billingCode, uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) CreateBill(_billingCode string, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateBill(&_LeaseContractManagement.TransactOpts, _billingCode, _contractId)
}

// CreateBill is a paid mutator transaction binding the contract method 0x452c5797.
//
// Solidity: function createBill(string _billingCode, uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) CreateBill(_billingCode string, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateBill(&_LeaseContractManagement.TransactOpts, _billingCode, _contractId)
}

// CreateLeaseContract is a paid mutator transaction binding the contract method 0xc6c20c8a.
//
// Solidity: function createLeaseContract(string _code, address _landlord, address _tenant, uint256 _roomId, uint256 _actualPrice, uint256 _depositAmount, uint256 _beginDate, uint256 _endDate, string _paymentMethod, string _electricityMethod, uint256 _electricityCost, string _waterMethod, uint256 _waterCost, uint256 _internetCost, uint256 _parkingFee, string _responsibilityA, string _responsibilityB, string _generalResponsibility, string _signatureA, uint256 _signedTimeA, uint256 _contractTemplateId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) CreateLeaseContract(opts *bind.TransactOpts, _code string, _landlord common.Address, _tenant common.Address, _roomId *big.Int, _actualPrice *big.Int, _depositAmount *big.Int, _beginDate *big.Int, _endDate *big.Int, _paymentMethod string, _electricityMethod string, _electricityCost *big.Int, _waterMethod string, _waterCost *big.Int, _internetCost *big.Int, _parkingFee *big.Int, _responsibilityA string, _responsibilityB string, _generalResponsibility string, _signatureA string, _signedTimeA *big.Int, _contractTemplateId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "createLeaseContract", _code, _landlord, _tenant, _roomId, _actualPrice, _depositAmount, _beginDate, _endDate, _paymentMethod, _electricityMethod, _electricityCost, _waterMethod, _waterCost, _internetCost, _parkingFee, _responsibilityA, _responsibilityB, _generalResponsibility, _signatureA, _signedTimeA, _contractTemplateId)
}

// CreateLeaseContract is a paid mutator transaction binding the contract method 0xc6c20c8a.
//
// Solidity: function createLeaseContract(string _code, address _landlord, address _tenant, uint256 _roomId, uint256 _actualPrice, uint256 _depositAmount, uint256 _beginDate, uint256 _endDate, string _paymentMethod, string _electricityMethod, uint256 _electricityCost, string _waterMethod, uint256 _waterCost, uint256 _internetCost, uint256 _parkingFee, string _responsibilityA, string _responsibilityB, string _generalResponsibility, string _signatureA, uint256 _signedTimeA, uint256 _contractTemplateId) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) CreateLeaseContract(_code string, _landlord common.Address, _tenant common.Address, _roomId *big.Int, _actualPrice *big.Int, _depositAmount *big.Int, _beginDate *big.Int, _endDate *big.Int, _paymentMethod string, _electricityMethod string, _electricityCost *big.Int, _waterMethod string, _waterCost *big.Int, _internetCost *big.Int, _parkingFee *big.Int, _responsibilityA string, _responsibilityB string, _generalResponsibility string, _signatureA string, _signedTimeA *big.Int, _contractTemplateId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateLeaseContract(&_LeaseContractManagement.TransactOpts, _code, _landlord, _tenant, _roomId, _actualPrice, _depositAmount, _beginDate, _endDate, _paymentMethod, _electricityMethod, _electricityCost, _waterMethod, _waterCost, _internetCost, _parkingFee, _responsibilityA, _responsibilityB, _generalResponsibility, _signatureA, _signedTimeA, _contractTemplateId)
}

// CreateLeaseContract is a paid mutator transaction binding the contract method 0xc6c20c8a.
//
// Solidity: function createLeaseContract(string _code, address _landlord, address _tenant, uint256 _roomId, uint256 _actualPrice, uint256 _depositAmount, uint256 _beginDate, uint256 _endDate, string _paymentMethod, string _electricityMethod, uint256 _electricityCost, string _waterMethod, uint256 _waterCost, uint256 _internetCost, uint256 _parkingFee, string _responsibilityA, string _responsibilityB, string _generalResponsibility, string _signatureA, uint256 _signedTimeA, uint256 _contractTemplateId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) CreateLeaseContract(_code string, _landlord common.Address, _tenant common.Address, _roomId *big.Int, _actualPrice *big.Int, _depositAmount *big.Int, _beginDate *big.Int, _endDate *big.Int, _paymentMethod string, _electricityMethod string, _electricityCost *big.Int, _waterMethod string, _waterCost *big.Int, _internetCost *big.Int, _parkingFee *big.Int, _responsibilityA string, _responsibilityB string, _generalResponsibility string, _signatureA string, _signedTimeA *big.Int, _contractTemplateId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateLeaseContract(&_LeaseContractManagement.TransactOpts, _code, _landlord, _tenant, _roomId, _actualPrice, _depositAmount, _beginDate, _endDate, _paymentMethod, _electricityMethod, _electricityCost, _waterMethod, _waterCost, _internetCost, _parkingFee, _responsibilityA, _responsibilityB, _generalResponsibility, _signatureA, _signedTimeA, _contractTemplateId)
}

// CreateReturnRequest is a paid mutator transaction binding the contract method 0xe8dc50c7.
//
// Solidity: function createReturnRequest(uint256 _contractId, string _returnCode) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) CreateReturnRequest(opts *bind.TransactOpts, _contractId *big.Int, _returnCode string) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "createReturnRequest", _contractId, _returnCode)
}

// CreateReturnRequest is a paid mutator transaction binding the contract method 0xe8dc50c7.
//
// Solidity: function createReturnRequest(uint256 _contractId, string _returnCode) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) CreateReturnRequest(_contractId *big.Int, _returnCode string) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateReturnRequest(&_LeaseContractManagement.TransactOpts, _contractId, _returnCode)
}

// CreateReturnRequest is a paid mutator transaction binding the contract method 0xe8dc50c7.
//
// Solidity: function createReturnRequest(uint256 _contractId, string _returnCode) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) CreateReturnRequest(_contractId *big.Int, _returnCode string) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.CreateReturnRequest(&_LeaseContractManagement.TransactOpts, _contractId, _returnCode)
}

// InputMeterReading is a paid mutator transaction binding the contract method 0xa08bae23.
//
// Solidity: function inputMeterReading(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) InputMeterReading(opts *bind.TransactOpts, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "inputMeterReading", _contractId)
}

// InputMeterReading is a paid mutator transaction binding the contract method 0xa08bae23.
//
// Solidity: function inputMeterReading(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) InputMeterReading(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.InputMeterReading(&_LeaseContractManagement.TransactOpts, _contractId)
}

// InputMeterReading is a paid mutator transaction binding the contract method 0xa08bae23.
//
// Solidity: function inputMeterReading(uint256 _contractId) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) InputMeterReading(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.InputMeterReading(&_LeaseContractManagement.TransactOpts, _contractId)
}

// PayBill is a paid mutator transaction binding the contract method 0xf0975190.
//
// Solidity: function payBill(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) PayBill(opts *bind.TransactOpts, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "payBill", _contractId)
}

// PayBill is a paid mutator transaction binding the contract method 0xf0975190.
//
// Solidity: function payBill(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementSession) PayBill(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.PayBill(&_LeaseContractManagement.TransactOpts, _contractId)
}

// PayBill is a paid mutator transaction binding the contract method 0xf0975190.
//
// Solidity: function payBill(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) PayBill(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.PayBill(&_LeaseContractManagement.TransactOpts, _contractId)
}

// PayDeposit is a paid mutator transaction binding the contract method 0x28cd3f18.
//
// Solidity: function payDeposit(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) PayDeposit(opts *bind.TransactOpts, _contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "payDeposit", _contractId)
}

// PayDeposit is a paid mutator transaction binding the contract method 0x28cd3f18.
//
// Solidity: function payDeposit(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementSession) PayDeposit(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.PayDeposit(&_LeaseContractManagement.TransactOpts, _contractId)
}

// PayDeposit is a paid mutator transaction binding the contract method 0x28cd3f18.
//
// Solidity: function payDeposit(uint256 _contractId) payable returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) PayDeposit(_contractId *big.Int) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.PayDeposit(&_LeaseContractManagement.TransactOpts, _contractId)
}

// SignContractByTenant is a paid mutator transaction binding the contract method 0x6f039de7.
//
// Solidity: function signContractByTenant(uint256 _contractId, string _signatureB) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactor) SignContractByTenant(opts *bind.TransactOpts, _contractId *big.Int, _signatureB string) (*types.Transaction, error) {
	return _LeaseContractManagement.contract.Transact(opts, "signContractByTenant", _contractId, _signatureB)
}

// SignContractByTenant is a paid mutator transaction binding the contract method 0x6f039de7.
//
// Solidity: function signContractByTenant(uint256 _contractId, string _signatureB) returns()
func (_LeaseContractManagement *LeaseContractManagementSession) SignContractByTenant(_contractId *big.Int, _signatureB string) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.SignContractByTenant(&_LeaseContractManagement.TransactOpts, _contractId, _signatureB)
}

// SignContractByTenant is a paid mutator transaction binding the contract method 0x6f039de7.
//
// Solidity: function signContractByTenant(uint256 _contractId, string _signatureB) returns()
func (_LeaseContractManagement *LeaseContractManagementTransactorSession) SignContractByTenant(_contractId *big.Int, _signatureB string) (*types.Transaction, error) {
	return _LeaseContractManagement.Contract.SignContractByTenant(&_LeaseContractManagement.TransactOpts, _contractId, _signatureB)
}

// LeaseContractManagementBillingRecordCreatedIterator is returned from FilterBillingRecordCreated and is used to iterate over the raw logs and unpacked data for BillingRecordCreated events raised by the LeaseContractManagement contract.
type LeaseContractManagementBillingRecordCreatedIterator struct {
	Event *LeaseContractManagementBillingRecordCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LeaseContractManagementBillingRecordCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LeaseContractManagementBillingRecordCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LeaseContractManagementBillingRecordCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LeaseContractManagementBillingRecordCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LeaseContractManagementBillingRecordCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LeaseContractManagementBillingRecordCreated represents a BillingRecordCreated event raised by the LeaseContractManagement contract.
type LeaseContractManagementBillingRecordCreated struct {
	ContractId  *big.Int
	BillingCode string
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterBillingRecordCreated is a free log retrieval operation binding the contract event 0xf9ac685aec1de533846267f26473457abb7d3a7f3ba389884992562ea89ea7dc.
//
// Solidity: event BillingRecordCreated(uint256 contractId, string billingCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) FilterBillingRecordCreated(opts *bind.FilterOpts) (*LeaseContractManagementBillingRecordCreatedIterator, error) {

	logs, sub, err := _LeaseContractManagement.contract.FilterLogs(opts, "BillingRecordCreated")
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementBillingRecordCreatedIterator{contract: _LeaseContractManagement.contract, event: "BillingRecordCreated", logs: logs, sub: sub}, nil
}

// WatchBillingRecordCreated is a free log subscription operation binding the contract event 0xf9ac685aec1de533846267f26473457abb7d3a7f3ba389884992562ea89ea7dc.
//
// Solidity: event BillingRecordCreated(uint256 contractId, string billingCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) WatchBillingRecordCreated(opts *bind.WatchOpts, sink chan<- *LeaseContractManagementBillingRecordCreated) (event.Subscription, error) {

	logs, sub, err := _LeaseContractManagement.contract.WatchLogs(opts, "BillingRecordCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LeaseContractManagementBillingRecordCreated)
				if err := _LeaseContractManagement.contract.UnpackLog(event, "BillingRecordCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBillingRecordCreated is a log parse operation binding the contract event 0xf9ac685aec1de533846267f26473457abb7d3a7f3ba389884992562ea89ea7dc.
//
// Solidity: event BillingRecordCreated(uint256 contractId, string billingCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) ParseBillingRecordCreated(log types.Log) (*LeaseContractManagementBillingRecordCreated, error) {
	event := new(LeaseContractManagementBillingRecordCreated)
	if err := _LeaseContractManagement.contract.UnpackLog(event, "BillingRecordCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LeaseContractManagementLeaseContractCreatedIterator is returned from FilterLeaseContractCreated and is used to iterate over the raw logs and unpacked data for LeaseContractCreated events raised by the LeaseContractManagement contract.
type LeaseContractManagementLeaseContractCreatedIterator struct {
	Event *LeaseContractManagementLeaseContractCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LeaseContractManagementLeaseContractCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LeaseContractManagementLeaseContractCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LeaseContractManagementLeaseContractCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LeaseContractManagementLeaseContractCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LeaseContractManagementLeaseContractCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LeaseContractManagementLeaseContractCreated represents a LeaseContractCreated event raised by the LeaseContractManagement contract.
type LeaseContractManagementLeaseContractCreated struct {
	ContractId   *big.Int
	ContractCode string
	Landlord     common.Address
	Tenant       common.Address
	RoomId       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterLeaseContractCreated is a free log retrieval operation binding the contract event 0x2700fcc1bc6b57f33be760906af4bae2d9633d51f2d5008085928a402f64bd20.
//
// Solidity: event LeaseContractCreated(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId)
func (_LeaseContractManagement *LeaseContractManagementFilterer) FilterLeaseContractCreated(opts *bind.FilterOpts) (*LeaseContractManagementLeaseContractCreatedIterator, error) {

	logs, sub, err := _LeaseContractManagement.contract.FilterLogs(opts, "LeaseContractCreated")
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementLeaseContractCreatedIterator{contract: _LeaseContractManagement.contract, event: "LeaseContractCreated", logs: logs, sub: sub}, nil
}

// WatchLeaseContractCreated is a free log subscription operation binding the contract event 0x2700fcc1bc6b57f33be760906af4bae2d9633d51f2d5008085928a402f64bd20.
//
// Solidity: event LeaseContractCreated(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId)
func (_LeaseContractManagement *LeaseContractManagementFilterer) WatchLeaseContractCreated(opts *bind.WatchOpts, sink chan<- *LeaseContractManagementLeaseContractCreated) (event.Subscription, error) {

	logs, sub, err := _LeaseContractManagement.contract.WatchLogs(opts, "LeaseContractCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LeaseContractManagementLeaseContractCreated)
				if err := _LeaseContractManagement.contract.UnpackLog(event, "LeaseContractCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLeaseContractCreated is a log parse operation binding the contract event 0x2700fcc1bc6b57f33be760906af4bae2d9633d51f2d5008085928a402f64bd20.
//
// Solidity: event LeaseContractCreated(uint256 contractId, string contractCode, address landlord, address tenant, uint256 roomId)
func (_LeaseContractManagement *LeaseContractManagementFilterer) ParseLeaseContractCreated(log types.Log) (*LeaseContractManagementLeaseContractCreated, error) {
	event := new(LeaseContractManagementLeaseContractCreated)
	if err := _LeaseContractManagement.contract.UnpackLog(event, "LeaseContractCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LeaseContractManagementReturnRequestCreatedIterator is returned from FilterReturnRequestCreated and is used to iterate over the raw logs and unpacked data for ReturnRequestCreated events raised by the LeaseContractManagement contract.
type LeaseContractManagementReturnRequestCreatedIterator struct {
	Event *LeaseContractManagementReturnRequestCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LeaseContractManagementReturnRequestCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LeaseContractManagementReturnRequestCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LeaseContractManagementReturnRequestCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LeaseContractManagementReturnRequestCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LeaseContractManagementReturnRequestCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LeaseContractManagementReturnRequestCreated represents a ReturnRequestCreated event raised by the LeaseContractManagement contract.
type LeaseContractManagementReturnRequestCreated struct {
	ContractId *big.Int
	ReturnCode string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterReturnRequestCreated is a free log retrieval operation binding the contract event 0x433a4c6f3ead5a0699513c3608985c1a874fe0a3396a027d639cb2cd6bc4e6fe.
//
// Solidity: event ReturnRequestCreated(uint256 contractId, string returnCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) FilterReturnRequestCreated(opts *bind.FilterOpts) (*LeaseContractManagementReturnRequestCreatedIterator, error) {

	logs, sub, err := _LeaseContractManagement.contract.FilterLogs(opts, "ReturnRequestCreated")
	if err != nil {
		return nil, err
	}
	return &LeaseContractManagementReturnRequestCreatedIterator{contract: _LeaseContractManagement.contract, event: "ReturnRequestCreated", logs: logs, sub: sub}, nil
}

// WatchReturnRequestCreated is a free log subscription operation binding the contract event 0x433a4c6f3ead5a0699513c3608985c1a874fe0a3396a027d639cb2cd6bc4e6fe.
//
// Solidity: event ReturnRequestCreated(uint256 contractId, string returnCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) WatchReturnRequestCreated(opts *bind.WatchOpts, sink chan<- *LeaseContractManagementReturnRequestCreated) (event.Subscription, error) {

	logs, sub, err := _LeaseContractManagement.contract.WatchLogs(opts, "ReturnRequestCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LeaseContractManagementReturnRequestCreated)
				if err := _LeaseContractManagement.contract.UnpackLog(event, "ReturnRequestCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReturnRequestCreated is a log parse operation binding the contract event 0x433a4c6f3ead5a0699513c3608985c1a874fe0a3396a027d639cb2cd6bc4e6fe.
//
// Solidity: event ReturnRequestCreated(uint256 contractId, string returnCode)
func (_LeaseContractManagement *LeaseContractManagementFilterer) ParseReturnRequestCreated(log types.Log) (*LeaseContractManagementReturnRequestCreated, error) {
	event := new(LeaseContractManagementReturnRequestCreated)
	if err := _LeaseContractManagement.contract.UnpackLog(event, "ReturnRequestCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
